kafka.bootstrap.servers=localhost:29092
mp.messaging.outgoing.registros-csv.connector=smallrye-kafka
mp.messaging.outgoing.registros-csv.topic=registros-csv
mp.messaging.outgoing.registros-csv.value.serializer=br.com.sourcesystems.serializer.RegistroSerializer
mp.messaging.outgoing.registros-csv.retry-attempts=3
mp.messaging.outgoing.registros-csv.retry-delay=1000


# Criação automática do tópico com 3 partições e 1 réplica
mp.messaging.connector.smallrye-kafka.auto-create-topics=true
mp.messaging.connector.smallrye-kafka.topic.registros-csv.partitions=6
mp.messaging.connector.smallrye-kafka.topic.registros-csv.replication-factor=1


# Scheduler
quarkus.scheduler.enabled=true
ingestor.schedule.interval=5s

# Micrometer para Prometheus
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/q/metrics
quarkus.micrometer.binder.jvm.enabled=true
quarkus.micrometer.binder.kafka.enabled=true

# Jaeger
quarkus.otel.enabled=true
quarkus.otel.logs.enabled=true
quarkus.otel.exporter.otlp.endpoint=${JAEGER_OTLP:http://localhost:4317}
quarkus.otel.traces.sampler=always_on

# Logging
quarkus.log.console.level=INFO

quarkus.http.port=8088
quarkus.log.console.enable=true
quarkus.log.console.json=false

#local leituira arquivos
app.files.dir=app/data
app.files.processed.dir=app/data/processado
producer.batch.size=500