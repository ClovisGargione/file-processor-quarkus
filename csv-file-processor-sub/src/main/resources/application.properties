kafka.bootstrap.servers=localhost:29092
# Kafka
mp.messaging.incoming.registros-csv.connector=smallrye-kafka
mp.messaging.incoming.registros-csv.topic=registros-csv
mp.messaging.incoming.registros-csv.value.deserializer=br.com.sourcesystems.deserializer.RegistroDeserializer
#mp.messaging.incoming.registros-csv.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

#mp.messaging.incoming.registros-csv.value.deserialization.type=br.com.sourcesystems.model.Registro
mp.messaging.incoming.registros-csv.group.id=csv-file-processor
mp.messaging.incoming.registros-csv.consumer.max.poll.records=20
# Criação automática do tópico de entrada
mp.messaging.connector.smallrye-kafka.auto-create-topics=true
mp.messaging.connector.smallrye-kafka.topic.registros-csv.partitions=6
mp.messaging.connector.smallrye-kafka.topic.registros-csv.replication-factor=1
mp.messaging.incoming.registros-csv.auto.offset.reset=earliest

# Scheduler
quarkus.scheduler.enabled=true
schedule.interval=5m

quarkus.mongodb.min-pool-size=20
quarkus.mongodb.max-pool-size=200

# MongoDB reativo
quarkus.mongodb.connection-string=mongodb://localhost:27017
quarkus.mongodb.database=arquivos

# Micrometer para Prometheus
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/q/metrics
quarkus.micrometer.binder.jvm.enabled=true
quarkus.micrometer.binder.kafka.enabled=true

# Jaeger
#quarkus.otel.enabled=true
#quarkus.otel.logs.enabled=true
#quarkus.otel.exporter.otlp.endpoint=${JAEGER_OTLP:http://localhost:4317}
#quarkus.otel.traces.sampler=always_on


quarkus.http.port=8087
quarkus.log.console.enable=true
quarkus.log.console.json=false

# KafkaConsumer properties
consumer.batch.size=100
consumer.batch.delay-ms=50
consumer.parallelism=4

quarkus.resteasy.jackson.enable=true